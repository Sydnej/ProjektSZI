FUNCTION_BLOCK napiwek	// Definicja bloku (moze byc wiecej blokow w pliku)

VAR_INPUT				// Definiuje zmienne wejsciowe
	wiek : REAL;
	inteligencja : REAL;
	doswiadczenie : REAL;
END_VAR

VAR_OUTPUT				// Definiuje zmienne wyjsciowe
	ocena : REAL;
END_VAR

FUZZIFY wiek		
	TERM mlody := (0, 1) (20, 0) ; 
	TERM poborowy := (1, 0) (19,1) (45,1) (65,0);
	TERM stary := (55, 0) (70, 1);
END_FUZZIFY

FUZZIFY inteligencja			
	TERM debil := (0, 1) (60, 1) (90,0) ;
	TERM przecietny := (1,0) (90,1) (110,1) (130,0);
	TERM geniusz := (120,0) (145,1);
END_FUZZIFY

FUZZIFY doswiadczenie			
	TERM niedoswiadczony := (0, 1) (2, 1) (3,0) ;
	TERM cos_umie := (2,0) (3,1) (4,1) (5,0);
	TERM doswiadczony := (4,0) (6,1);
END_FUZZIFY

DEFUZZIFY ocena			
	TERM slaby := (0,0) (20,1) (40,0);
	TERM przecietny := (30,0) (50,1) (60,0);
	TERM dobry := (50,0) (70,1) (90,0);
	TERM bardzo_dobry := (80,0) (95,1) (100,1);
	
	METHOD : COG;		// Metoda defuzyfikacji - 'Center Of Gravity' - 'Sreodka ciezkosci'
	DEFAULT := 0;		
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Uzycie 'min' jako 'and' (implikuje uzycie 'max' jako 'or' dla zapewnienia praw DeMorgan'a)
	ACT : MIN;			// Uzycie  'min' jako metody aktywacji
	ACCU : MAX;			// Metoda agregacji - 'max'

	RULE 1 : IF wiek IS mlody OR doswiadczenie is niedoswiadczony OR inteligencja IS debil THEN ocena IS slaby;
	RULE 2 : IF wiek IS stary OR inteligencja IS geniusz THEN ocena IS przecietny; 
	RULE 3 : IF wiek IS poborowy AND doswiadczenie IS cos_umie AND inteligencja IS geniusz THEN ocena IS dobry;
	RULE 4 : IF wiek IS poborowy AND doswiadczenie IS doswiadczony AND inteligencja IS geniusz THEN ocena IS bardzo_dobry;

END_RULEBLOCK

END_FUNCTION_BLOCK

